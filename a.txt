SSH警告

当你第一次使用Git的clone或者push命令连接GitHub时，会得到一个警告：

The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.
RSA key fingerprint is xx.xx.xx.xx.xx.
Are you sure you want to continue connecting (yes/no)?

这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。

Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：

Warning: Permanently added 'github.com' (RSA) to the list of known hosts.

这个警告只会出现一次，后面的操作就不会有任何警告了。

如果你实在担心有人冒充GitHub服务器，输入yes前可以对照GitHub的RSA Key的指纹信息是否与SSH连接给出的一致。
小结

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！
Git 是当前最流行的版本控制程序之一，文本包含了 Git 的一些基本用法 创建 git 仓库 初始化 git 仓库 

mkdir project  # 创建项目目录 
cd project  # 进入到项目目录 
git init  # 初始化 git 仓库。此命令会在当前目录新建一个 .git 目录，用于存储 git 仓库的相关信息 

初始化提交 

touch README 
git add .  # 将当前目录添加到 git 仓库中， 使用 git add -A 则是添加所有改动的文档 
git commit  -m  "Initial commit" 
git remote add origin  git @github.com:lugir /repo.git  # 设置仓库 

修补提交（修补最近一次的提交而不创建新的提交） 

git commit  --amend  -m  "commit message." 

提交冲突时可以合并后再推送 

git pull  # 获取远程版本库提交与本地提交进行合并 
git push  # 提交 

使用别人的仓库 

git clone http: //path /to /git.git  # clone 的内容会放在当前目录下的新目录 

将代码从本地回传到仓库 

git push  -u origin master 

使用 git status 查看文件状态 

Hello I am the GitHub!

Yes I get your Response!

I gonna to test merge! Can you help me ?

You should test Frequently,Then you'll get stronger!